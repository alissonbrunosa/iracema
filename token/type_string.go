// Code generated by "stringer -type=Type -linecomment"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Illegal-0]
	_ = x[Eof-1]
	_ = x[If-2]
	_ = x[Is-3]
	_ = x[For-4]
	_ = x[Switch-5]
	_ = x[Case-6]
	_ = x[Default-7]
	_ = x[In-8]
	_ = x[Stop-9]
	_ = x[Next-10]
	_ = x[While-11]
	_ = x[Else-12]
	_ = x[Fun-13]
	_ = x[Nil-14]
	_ = x[Catch-15]
	_ = x[Block-16]
	_ = x[Object-17]
	_ = x[Return-18]
	_ = x[Int-19]
	_ = x[Float-20]
	_ = x[String-21]
	_ = x[Bool-22]
	_ = x[Minus-23]
	_ = x[Plus-24]
	_ = x[Slash-25]
	_ = x[Star-26]
	_ = x[Dot-27]
	_ = x[Colon-28]
	_ = x[Not-29]
	_ = x[Arrow-30]
	_ = x[Comma-31]
	_ = x[Assign-32]
	_ = x[Equal-33]
	_ = x[LessThan-34]
	_ = x[LessOrEqualThan-35]
	_ = x[GreaterThan-36]
	_ = x[GreaterOrEqualThan-37]
	_ = x[Ident-38]
	_ = x[LeftParenthesis-39]
	_ = x[RightParenthesis-40]
	_ = x[LeftBracket-41]
	_ = x[RightBracket-42]
	_ = x[LeftBrace-43]
	_ = x[RightBrace-44]
}

const _Type_name = "IllegalEOFifisforswitchcasedefaultinstopnextwhileelsefunnilcatchblockobjectreturnIntFloatStringBool-+/*.:!->Comma===<<=>>=Ident()[]{}"

var _Type_index = [...]uint8{0, 7, 10, 12, 14, 17, 23, 27, 34, 36, 40, 44, 49, 53, 56, 59, 64, 69, 75, 81, 84, 89, 95, 99, 100, 101, 102, 103, 104, 105, 106, 108, 113, 114, 116, 117, 119, 120, 122, 127, 128, 129, 130, 131, 132, 133}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
