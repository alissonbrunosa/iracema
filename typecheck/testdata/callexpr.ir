object CallExprTest {
  fun call {
    var y Int = do()
    # cannot assign Int as Float value in declaration
    var x Float = do()
  }

  fun do -> Int {
    return 10
  }
}

object CallExprTestMethodMissing {
  fun do -> Int {
    return 10
  }

  fun call {
    var o = new Object()
    # Object has no method do
    var x Float = o.do()
  }
}

object CallExprTestWrongArgument {
  fun do(a Int) -> Int {
    return a
  }

  fun call {
    var x Int = do("")
  }
}

object CallNewObject {
  fun init(a Int, b Float) {}

  fun test() {
    var cno = new CallNewObject(10, 10.50)
  }

  fun test_with_wrong_args() {
    var cno = new CallNewObject(10.50, 10)
  }
}


# call super method
object Animal {
  fun walk() {}

  fun eat(food String) {}

  fun do_something() {
    super() # expected error: no superclass of 'Animal' has method 'do_something'
  }

  fun age() -> Int { return 10 }
}

object Dog is Animal {
  fun walk() {
    super()
  }

  fun eat(food String) {
    super(10) # expected error: expected 'String', found 'Int' in argument to eat
  }

  fun age() -> Int {
    var x Int = super()
    var y Float = super() # expected error: expected 'Float', found 'Int' in declaration
    return x
  }
}
