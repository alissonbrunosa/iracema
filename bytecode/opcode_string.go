// Code generated by "stringer -type=Opcode -output=opcode_string.go -linecomment"; DO NOT EDIT.

package bytecode

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Not-0]
	_ = x[Pop-1]
	_ = x[Push-2]
	_ = x[Throw-3]
	_ = x[Unary-4]
	_ = x[Binary-5]
	_ = x[Return-6]
	_ = x[Compare-7]
	_ = x[PushNil-8]
	_ = x[SetAttr-9]
	_ = x[GetAttr-10]
	_ = x[PushSelf-11]
	_ = x[SetLocal-12]
	_ = x[GetLocal-13]
	_ = x[MatchType-14]
	_ = x[BuildArray-15]
	_ = x[CallMethod-16]
	_ = x[SetConstant-17]
	_ = x[GetConstant-18]
	_ = x[DefineObject-19]
	_ = x[DefineFunction-20]
	_ = x[Jump-21]
	_ = x[JumpIfFalse-22]
}

const _Opcode_name = "notpoppushthrowunarybinaryreturncomparepushnilsetattrgetattrpushselfsetlocalgetlocalmatchtypebuildarraycallmethodsetconstantgetconstantdefineobjectdefinefunctionjumpjumpiffalse"

var _Opcode_index = [...]uint8{0, 3, 6, 10, 15, 20, 26, 32, 39, 46, 53, 60, 68, 76, 84, 93, 103, 113, 124, 135, 147, 161, 165, 176}

func (i Opcode) String() string {
	if i >= Opcode(len(_Opcode_index)-1) {
		return "Opcode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
